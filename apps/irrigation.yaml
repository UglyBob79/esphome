# Include common stuff
packages:
  common: !include ../common/common.yaml
  hardware: !include ../hardware/esp8266/sonoff-4ch-pro.yaml
  
api:
  # Define a service to call the watering script from Home Assistant
  services:
    - service: on_for_duration
      variables:
        relay_id: int
        duration: int
      then:
        - script.execute:
            id: on_for_duration
            relay_id: !lambda 'return relay_id;'
            duration: !lambda 'return duration;'

    - service: stop
      then:
        - script.execute:
            id: stop_all

# Script for running the watering for a certain duration in seconds
script:
  - id: on_for_duration
    mode: parallel
    parameters:
      relay_id: int
      duration: int
    then:
      - script.execute:
          id: watering_control
          relay_id: !lambda 'return relay_id;'
          state: True
      - delay: !lambda 'return 1000 * duration;'
      - script.execute:
          id: watering_control
          relay_id: !lambda 'return relay_id;'
          state: False

    # Script to turn on or off specific relay
  - id: watering_control
    parameters:
      relay_id: int
      state: bool
    then:
      # id can't be dynamic in yaml, so need this C++ snippet to map relay_id to actual id
      - lambda: |-
          static switch_::Switch* relay_array[] = {
            id(relay_1),
            id(relay_2),
            id(relay_3),
            id(relay_4)
          };

          if (relay_id >= 1 && relay_id <= 4) {
            if (state) {
              relay_array[relay_id - 1]->turn_on();
            } else {
              relay_array[relay_id - 1]->turn_off();
            }
          }      

  # Script to stopp any running on duration script and shut off all relays
  - id: stop_all
    then:
      - script.stop:
          id: on_for_duration
      - switch.turn_off: relay_1
      - switch.turn_off: relay_2
      - switch.turn_off: relay_3
      - switch.turn_off: relay_4